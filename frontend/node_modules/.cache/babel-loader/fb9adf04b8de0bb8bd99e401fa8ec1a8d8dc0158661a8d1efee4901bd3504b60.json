{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"WordCloudComponent\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"小词云\", -1);\nconst _hoisted_3 = {\n  id: \"word-text-area\"\n};\nconst _hoisted_4 = {\n  id: \"word-img\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"image-slot\"\n}, [/*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-picture-outline\"\n})], -1);\nconst _hoisted_6 = {\n  id: \"word-operation\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_image = _resolveComponent(\"el-image\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_input, {\n    type: \"textarea\",\n    rows: 10,\n    placeholder: \"请输入内容\",\n    modelValue: _ctx.textarea,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.textarea = $event)\n  }, null, 8, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_image, {\n    src: _ctx.getImageSrc(),\n    fit: _ctx.fit\n  }, {\n    error: _withCtx(() => [_hoisted_5]),\n    _: 1\n  }, 8, [\"src\", \"fit\"])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_row, null, {\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _ctx.onSubmit,\n      round: \"\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"生成词云\")]),\n      _: 1\n    }, 8, [\"onClick\"]), _ctx.pic ? (_openBlock(), _createBlock(_component_el_button, {\n      key: 0,\n      type: \"success\",\n      onClick: _ctx.onDownload,\n      round: \"\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"下载图片\")]),\n      _: 1\n    }, 8, [\"onClick\"])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  })])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_el_input","type","rows","placeholder","modelValue","_ctx","textarea","_cache","$event","_hoisted_4","_component_el_image","src","getImageSrc","fit","error","_withCtx","_hoisted_5","_","_hoisted_6","_component_el_row","default","_component_el_button","onClick","onSubmit","round","_createTextVNode","pic","_createBlock","key","onDownload","_createCommentVNode"],"sources":["D:\\wendang\\vscode\\my_projects\\flask_vue_wordcloud\\word-cloud\\frontend\\src\\views\\WordCloud.vue"],"sourcesContent":["/* eslint-disable */\n<!-- <template>\n    <div class=\"WordCloud\">\n        <h2>小词云</h2>\n        <div id=\"word-text-area\">\n            <el-input type=\"textarea\" :rows=\"10\" placeholder=\"请输入内容\" v-model=\"textarea\">\n            </el-input>\n            <div id=\"word-img\">\n                <el-image :src=\"getImageSrc()\" :fit=\"fit\">\n                    <template #error>\n                        <div class=\"image-slot\">\n                            <i class=\"el-icon-picture-outline\"></i>\n                        </div>\n                    </template>\n                </el-image>\n            </div>\n            <div id=\"word-operation\">\n                <el-row>\n                    <el-button type=\"primary\" @click=\"onSubmit\" round>生成词云</el-button>\n                    <el-button type=\"success\" @click=\"onDownload\" round>下载图片</el-button>\n                </el-row>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: 'WordCloudComponent',\n  data () {\n    return {\n      textarea: '',\n      pic: '',\n      pageTitle: 'Flask Vue Word Cloud'\n    }\n  },\n  methods: {\n    onSubmit () {\n      const param = {\n        word: this.textarea\n      }\n      this.axios.post('/word/cloud/generate', param).then(\n        res => {\n          this.pic = res.data\n          console.log(res.data)\n        }\n      ).catch(res => {\n        console.log(res.data.res)\n      })\n    },\n    onDownload () {\n      const imgUrl = 'data:image/png;base64,' + this.pic\n      const a = document.createElement('a')\n      a.href = imgUrl\n      a.setAttribute('download', 'word-cloud')\n      a.click()\n    },\n    // 添加getImageSrc方法\n    getImageSrc () {\n      if (this.pic) {\n        return `data:image/png;base64,${this.pic}`\n      } else {\n        return '' // 或者返回默认的占位图地址\n      }\n    }\n  }\n}\n</script> -->\n\n<!-- <template>\n    <div class=\"WordCloudComponent\">\n        <h2>小词云</h2>\n        <div id=\"word-text-area\">\n            <el-input type=\"textarea\" :rows=\"10\" placeholder=\"请输入内容\" v-model=\"textarea\"></el-input>\n            <div id=\"word-img\">\n                <el-image :src=\"getImageSrc()\" :fit=\"fit\">\n                    <template #error>\n                        <div class=\"image-slot\">\n                            <i class=\"el-icon-picture-outline\"></i>\n                        </div>\n                    </template>\n                </el-image>\n            </div>\n            <div id=\"word-operation\">\n                <el-row>\n                    <el-button type=\"primary\" @click=\"onSubmit\" round>生成词云</el-button>\n                    <el-button type=\"success\" @click=\"onDownload\" round v-if=\"pic\">下载图片</el-button>\n                </el-row>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { defineComponent, ref } from 'vue'\nimport axios from 'axios'\n\nexport default defineComponent({\n  name: 'WordCloudComponent',\n  setup () {\n    const textarea = ref('')\n    const pic = ref('')\n    const fit = 'fill' // 或者选择其他适合的图片适应方式\n\n    async function onSubmit () {\n      const param = {\n        word: textarea.value\n      }\n      try {\n        const res = await axios.post('/word/cloud/generate', param)\n        pic.value = `data:image/png;base64,${res.data}`\n      } catch (error) {\n        console.log(error.response?.data)\n      }\n    }\n\n    function onDownload () {\n      const imgUrl = `data:image/png;base64,${pic.value}`\n      const a = document.createElement('a')\n      a.href = imgUrl\n      a.setAttribute('download', 'word-cloud.png')\n      document.body.appendChild(a) // 确保a标签存在于DOM中以触发点击事件\n      a.click()\n      document.body.removeChild(a) // 事件触发后移除a标签\n    }\n\n    function getImageSrc () {\n      return pic.value ? `data:image/png;base64,${pic.value}` : ''\n    }\n\n    return {\n      textarea,\n      pic,\n      fit,\n      onSubmit,\n      onDownload,\n      getImageSrc\n    }\n  }\n})\n</script> -->\n\n<!-- <template>\n    <div class=\"about\">\n        <h1>This is an about page</h1>\n    </div>\n</template> -->\n\n<template>\n  <div class=\"WordCloudComponent\">\n    <h2>小词云</h2>\n    <div id=\"word-text-area\">\n      <el-input type=\"textarea\" :rows=\"10\" placeholder=\"请输入内容\" v-model=\"textarea\"></el-input>\n      <div id=\"word-img\">\n        <el-image :src=\"getImageSrc()\" :fit=\"fit\">\n          <template #error>\n            <div class=\"image-slot\">\n              <i class=\"el-icon-picture-outline\"></i>\n            </div>\n          </template>\n        </el-image>\n      </div>\n      <div id=\"word-operation\">\n        <el-row>\n          <el-button type=\"primary\" @click=\"onSubmit\" round>生成词云</el-button>\n          <el-button type=\"success\" @click=\"onDownload\" round v-if=\"pic\">下载图片</el-button>\n        </el-row>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref } from 'vue'\nimport axios from 'axios'\n\nexport default defineComponent({\n  name: 'WordCloudComponent',\n  setup () {\n    const textarea = ref('')\n    const pic = ref('')\n\n    // 图片适应方式\n    const fit = 'fill'\n\n    async function onSubmit () {\n      const param = {\n        word: textarea.value\n      }\n      try {\n        const res = await axios.post('/word/cloud/generate', param)\n        pic.value = `data:image/png;base64,${res.data}`\n      } catch (error) {\n        console.log(error.response?.data)\n      }\n    }\n\n    function onDownload () {\n      // const imgUrl = `data:image/png;base64,${pic.value}`\n      const imgUrl = pic.value\n      const a = document.createElement('a')\n      a.href = imgUrl\n      a.setAttribute('download', 'word-cloud.png')\n      document.body.appendChild(a) // 确保a标签存在于DOM中以触发点击事件\n      a.click()\n      document.body.removeChild(a) // 事件触发后移除a标签\n    }\n\n    // 添加getImageSrc方法\n    function getImageSrc () {\n      // return pic.value ? `data:image/png;base64,${pic.value}` : ''\n      return pic.value ? pic.value : ''\n    }\n\n    return {\n      textarea,\n      pic,\n      fit,\n      onSubmit,\n      onDownload,\n      getImageSrc\n    }\n  }\n})\n</script>\n"],"mappings":";;EAqJOA,KAAK,EAAC;AAAoB;gCAC7BC,mBAAA,CAAY,YAAR,KAAG;;EACFC,EAAE,EAAC;AAAgB;;EAEjBA,EAAE,EAAC;AAAU;gCAGZD,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAY,I,aACrBC,mBAAA,CAAuC;EAApCD,KAAK,EAAC;AAAyB,G;;EAKrCE,EAAE,EAAC;AAAgB;;;;;;uBAb5BC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,UAAY,EACZJ,mBAAA,CAiBM,OAjBNK,UAiBM,GAhBJC,YAAA,CAAuFC,mBAAA;IAA7EC,IAAI,EAAC,UAAU;IAAEC,IAAI,EAAE,EAAE;IAAEC,WAAW,EAAC,OAAO;IAxJ9DC,UAAA,EAwJwEC,IAAA,CAAAC,QAAQ;IAxJhF,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAwJwEH,IAAA,CAAAC,QAAQ,GAAAE,MAAA;+BAC1Ef,mBAAA,CAQM,OARNgB,UAQM,GAPJV,YAAA,CAMWW,mBAAA;IANAC,GAAG,EAAEN,IAAA,CAAAO,WAAW;IAAKC,GAAG,EAAER,IAAA,CAAAQ;;IACxBC,KAAK,EAAAC,QAAA,CACd,MAEM,CAFNC,UAEM,C;IA9JlBC,CAAA;2BAkKMxB,mBAAA,CAKM,OALNyB,UAKM,GAJJnB,YAAA,CAGSoB,iBAAA;IAtKjBC,OAAA,EAAAL,QAAA,CAoKU,MAAkE,CAAlEhB,YAAA,CAAkEsB,oBAAA;MAAvDpB,IAAI,EAAC,SAAS;MAAEqB,OAAK,EAAEjB,IAAA,CAAAkB,QAAQ;MAAEC,KAAK,EAAL;;MApKtDJ,OAAA,EAAAL,QAAA,CAoK4D,MAAI,CApKhEU,gBAAA,CAoK4D,MAAI,E;MApKhER,CAAA;wBAqKoEZ,IAAA,CAAAqB,GAAG,I,cAA7DC,YAAA,CAA+EN,oBAAA;MArKzFO,GAAA;MAqKqB3B,IAAI,EAAC,SAAS;MAAEqB,OAAK,EAAEjB,IAAA,CAAAwB,UAAU;MAAEL,KAAK,EAAL;;MArKxDJ,OAAA,EAAAL,QAAA,CAqKyE,MAAI,CArK7EU,gBAAA,CAqKyE,MAAI,E;MArK7ER,CAAA;0BAAAa,mBAAA,W;IAAAb,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}